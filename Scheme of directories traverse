DFS

https://upload.wikimedia.org/wikipedia/commons/1/1f/Depth-first-tree.svg

In pic numbers are directories. So, at first, we are located  in our "root" dir (1). 
Then we do Work at this level (search for files/dirs, compare, sync, etc.). 
Now we have a list of subdirs at this level (2,7,8). 
So we go deeper into one level to (2). 
Here we do all of this again (work at lvl2, subdirs are 3,6). 
And go deeper. 
When we reach the end (4) and work at this lvl is done, we go up one level, and go deeper to another non-visited dir (5). 
When there is no way to go deeper go up one level, and try to find another way down again.



#==========Example==========
#!/usr/bin/python

import os, sys

# Open a file
path = "/var/www/html/"
dirs = os.listdir( path )

# This would print all the files and directories
for file in dirs:
   print file
When we run above program, it produces following result:

test.htm
stamp
faq.htm
_vti_txt
robots.txt
itemlisting
resumelisting
writing_effective_resume.htm
advertisebusiness.htm
papers
resume




# Import the os module, for the os.walk function
import os
 
# Set the directory you want to start from
rootDir = '.'
for dirName, subdirList, fileList in os.walk(rootDir):
    print('Found directory: %s' % dirName)
    for fname in fileList:
        print('\t%s' % fname)

os.walk takes care of the details, and on every pass of the loop, it gives us three things:

 - dirName: The next directory it found.
 - subdirList: A list of sub-directories in the current directory.
 - fileList: A list of files in the current directory.


Following is the syntax for walk() method:

os.walk(top[, topdown=True[, onerror=None[, followlinks=False]]])
Parameters
top -- Each directory rooted at directory, yields 3-tuples, i.e., (dirpath, dirnames, filenames)

topdown -- If optional argument topdown is True or not specified, directories are scanned from top-down. If topdown is set to False, directories are scanned from bottom-up.

onerror -- This can show error to continue with the walk, or raise the exception to abort the walk.

followlinks -- This visits directories pointed to by symlinks, if set to true.
Example
The following example shows the usage of walk() method.

# !/usr/bin/python

import os
for root, dirs, files in os.walk(".", topdown=False):
    for name in files:
        print(os.path.join(root, name))
    for name in dirs:
        print(os.path.join(root, name))
